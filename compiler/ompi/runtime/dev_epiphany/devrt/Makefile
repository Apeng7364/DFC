# Makefile.in generated by automake 1.11.6 from Makefile.am.
# runtime/dev_epiphany/devrt/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#    OMPi OpenMP Compiler
#    == Copyright since 2001 the OMPi Team
#    == Dept. of Computer Science & Engineering, University of Ioannina
#
#    This file is part of OMPi.
#
#    OMPi is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    OMPi is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with OMPi; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

# MODULE: epiphany 
#   PART: device-side runtime library



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/ompi
pkgincludedir = $(includedir)/ompi
pkglibdir = $(libdir)/ompi
pkglibexecdir = $(libexecdir)/ompi
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = runtime/dev_epiphany/devrt
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/common/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(moduledir)"
LIBRARIES = $(module_LIBRARIES)
ARFLAGS = cru
libdevrt_a_AR = $(AR) $(ARFLAGS)
libdevrt_a_LIBADD =
am_libdevrt_a_OBJECTS = libdevrt_a-atomic.$(OBJEXT) \
	libdevrt_a-barrier.$(OBJEXT) libdevrt_a-barrier_init.$(OBJEXT) \
	libdevrt_a-chunk_dynamic.$(OBJEXT) \
	libdevrt_a-chunk_guided.$(OBJEXT) \
	libdevrt_a-chunk_static.$(OBJEXT) libdevrt_a-com.$(OBJEXT) \
	libdevrt_a-critical.$(OBJEXT) libdevrt_a-device.$(OBJEXT) \
	libdevrt_a-epiphany.$(OBJEXT) \
	libdevrt_a-executetasks.$(OBJEXT) libdevrt_a-for.$(OBJEXT) \
	libdevrt_a-icvs_omp.$(OBJEXT) libdevrt_a-init_ws.$(OBJEXT) \
	libdevrt_a-locks.$(OBJEXT) libdevrt_a-newtask.$(OBJEXT) \
	libdevrt_a-omp.$(OBJEXT) libdevrt_a-othr.$(OBJEXT) \
	libdevrt_a-ordered.$(OBJEXT) libdevrt_a-parallel.$(OBJEXT) \
	libdevrt_a-reduction.$(OBJEXT) libdevrt_a-sections.$(OBJEXT) \
	libdevrt_a-single.$(OBJEXT) libdevrt_a-tasks.$(OBJEXT) \
	libdevrt_a-taskwait.$(OBJEXT) libdevrt_a-ws.$(OBJEXT)
libdevrt_a_OBJECTS = $(am_libdevrt_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/common
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libdevrt_a_SOURCES)
DIST_SOURCES = $(libdevrt_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(module_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ljr/dfcc2/ompi/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = e-ar
AUTOCONF = ${SHELL} /home/ljr/dfcc2/ompi/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ljr/dfcc2/ompi/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ljr/dfcc2/ompi/missing --run automake-1.11
AWK = gawk

# -----
# Just list your files in the libdevrt_a_SOURCES and EXTRA_DIST rules.
# Compiled files go to _SOURCES; utility, non-compiled files go to _DIST.
# -----
CC = e-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O3
CPP = gcc -E
CPPFLAGS = -D_REENTRANT
CYGPATH_W = echo
DEBUGFLAG = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ljr/dfcc2/ompi/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ompi
PACKAGE_BUGREPORT = 
PACKAGE_NAME = OMPi compiler with torc extensions
PACKAGE_STRING = OMPi compiler with torc extensions obsolete
PACKAGE_TARNAME = ompi
PACKAGE_URL = 
PACKAGE_VERSION = obsolete
PATH_SEPARATOR = :
RANLIB = e-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = obsolete
YACC = bison -y
YFLAGS = 
abs_builddir = /home/ljr/dfcc2/ompi/runtime/dev_epiphany/devrt
abs_srcdir = /home/ljr/dfcc2/ompi/runtime/dev_epiphany/devrt
abs_top_builddir = /home/ljr/dfcc2/ompi
abs_top_srcdir = /home/ljr/dfcc2/ompi
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
availmodpaths = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
defaultlib = yes
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ljr/dfcc2/ompi/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libpaths =  ee_process ee_psthr ee_pthreads ee_torc
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
modpaths =  dev_epiphany
oldincludedir = /usr/include
ortlib = pthreads
ortlibpath =  ee_pthreads
pdfdir = ${docdir}
prefix = /home/ljr/dfcc2/dfcc
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..

# -----
# Don't change the moduledir value.
# -----
moduledir = $(pkglibdir)/devices/$(MODULE_NAME)
module_LIBRARIES = libdevrt.a
libdevrt_a_SOURCES = atomic.c barrier.c barrier_init.c chunk_dynamic.c \
    chunk_guided.c chunk_static.c com.c critical.c device.c epiphany.c \
    executetasks.c for.c icvs_omp.c init_ws.c locks.c newtask.c omp.c othr.c \
    ordered.c parallel.c reduction.c sections.c single.c tasks.c taskwait.c ws.c

libdevrt_a_CFLAGS = -Wall -O3 -funroll-loops -mfp-mode=round-nearest -ffast-math -T ./ompi_internal.ldf
EXTRA_DIST = device.h device_globals.h shared_data.h ompi_internal.ldf \
    MakeKernel.$(MODULE_NAME)


# -----
# The following files should also be installed at "make install" time
# -----
module_DATA = ompi_internal.ldf MakeKernel.$(MODULE_NAME)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu runtime/dev_epiphany/devrt/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu runtime/dev_epiphany/devrt/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-moduleLIBRARIES: $(module_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(module_LIBRARIES)'; test -n "$(moduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(moduledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(moduledir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(moduledir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(moduledir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(module_LIBRARIES)'; test -n "$(moduledir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(moduledir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(moduledir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-moduleLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(module_LIBRARIES)'; test -n "$(moduledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(moduledir)'; $(am__uninstall_files_from_dir)

clean-moduleLIBRARIES:
	-test -z "$(module_LIBRARIES)" || rm -f $(module_LIBRARIES)
libdevrt.a: $(libdevrt_a_OBJECTS) $(libdevrt_a_DEPENDENCIES) $(EXTRA_libdevrt_a_DEPENDENCIES) 
	-rm -f libdevrt.a
	$(libdevrt_a_AR) libdevrt.a $(libdevrt_a_OBJECTS) $(libdevrt_a_LIBADD)
	$(RANLIB) libdevrt.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libdevrt_a-atomic.Po
include ./$(DEPDIR)/libdevrt_a-barrier.Po
include ./$(DEPDIR)/libdevrt_a-barrier_init.Po
include ./$(DEPDIR)/libdevrt_a-chunk_dynamic.Po
include ./$(DEPDIR)/libdevrt_a-chunk_guided.Po
include ./$(DEPDIR)/libdevrt_a-chunk_static.Po
include ./$(DEPDIR)/libdevrt_a-com.Po
include ./$(DEPDIR)/libdevrt_a-critical.Po
include ./$(DEPDIR)/libdevrt_a-device.Po
include ./$(DEPDIR)/libdevrt_a-epiphany.Po
include ./$(DEPDIR)/libdevrt_a-executetasks.Po
include ./$(DEPDIR)/libdevrt_a-for.Po
include ./$(DEPDIR)/libdevrt_a-icvs_omp.Po
include ./$(DEPDIR)/libdevrt_a-init_ws.Po
include ./$(DEPDIR)/libdevrt_a-locks.Po
include ./$(DEPDIR)/libdevrt_a-newtask.Po
include ./$(DEPDIR)/libdevrt_a-omp.Po
include ./$(DEPDIR)/libdevrt_a-ordered.Po
include ./$(DEPDIR)/libdevrt_a-othr.Po
include ./$(DEPDIR)/libdevrt_a-parallel.Po
include ./$(DEPDIR)/libdevrt_a-reduction.Po
include ./$(DEPDIR)/libdevrt_a-sections.Po
include ./$(DEPDIR)/libdevrt_a-single.Po
include ./$(DEPDIR)/libdevrt_a-tasks.Po
include ./$(DEPDIR)/libdevrt_a-taskwait.Po
include ./$(DEPDIR)/libdevrt_a-ws.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libdevrt_a-atomic.o: atomic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-atomic.o -MD -MP -MF $(DEPDIR)/libdevrt_a-atomic.Tpo -c -o libdevrt_a-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c
	$(am__mv) $(DEPDIR)/libdevrt_a-atomic.Tpo $(DEPDIR)/libdevrt_a-atomic.Po
#	source='atomic.c' object='libdevrt_a-atomic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-atomic.o `test -f 'atomic.c' || echo '$(srcdir)/'`atomic.c

libdevrt_a-atomic.obj: atomic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-atomic.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-atomic.Tpo -c -o libdevrt_a-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-atomic.Tpo $(DEPDIR)/libdevrt_a-atomic.Po
#	source='atomic.c' object='libdevrt_a-atomic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-atomic.obj `if test -f 'atomic.c'; then $(CYGPATH_W) 'atomic.c'; else $(CYGPATH_W) '$(srcdir)/atomic.c'; fi`

libdevrt_a-barrier.o: barrier.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-barrier.o -MD -MP -MF $(DEPDIR)/libdevrt_a-barrier.Tpo -c -o libdevrt_a-barrier.o `test -f 'barrier.c' || echo '$(srcdir)/'`barrier.c
	$(am__mv) $(DEPDIR)/libdevrt_a-barrier.Tpo $(DEPDIR)/libdevrt_a-barrier.Po
#	source='barrier.c' object='libdevrt_a-barrier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-barrier.o `test -f 'barrier.c' || echo '$(srcdir)/'`barrier.c

libdevrt_a-barrier.obj: barrier.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-barrier.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-barrier.Tpo -c -o libdevrt_a-barrier.obj `if test -f 'barrier.c'; then $(CYGPATH_W) 'barrier.c'; else $(CYGPATH_W) '$(srcdir)/barrier.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-barrier.Tpo $(DEPDIR)/libdevrt_a-barrier.Po
#	source='barrier.c' object='libdevrt_a-barrier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-barrier.obj `if test -f 'barrier.c'; then $(CYGPATH_W) 'barrier.c'; else $(CYGPATH_W) '$(srcdir)/barrier.c'; fi`

libdevrt_a-barrier_init.o: barrier_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-barrier_init.o -MD -MP -MF $(DEPDIR)/libdevrt_a-barrier_init.Tpo -c -o libdevrt_a-barrier_init.o `test -f 'barrier_init.c' || echo '$(srcdir)/'`barrier_init.c
	$(am__mv) $(DEPDIR)/libdevrt_a-barrier_init.Tpo $(DEPDIR)/libdevrt_a-barrier_init.Po
#	source='barrier_init.c' object='libdevrt_a-barrier_init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-barrier_init.o `test -f 'barrier_init.c' || echo '$(srcdir)/'`barrier_init.c

libdevrt_a-barrier_init.obj: barrier_init.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-barrier_init.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-barrier_init.Tpo -c -o libdevrt_a-barrier_init.obj `if test -f 'barrier_init.c'; then $(CYGPATH_W) 'barrier_init.c'; else $(CYGPATH_W) '$(srcdir)/barrier_init.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-barrier_init.Tpo $(DEPDIR)/libdevrt_a-barrier_init.Po
#	source='barrier_init.c' object='libdevrt_a-barrier_init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-barrier_init.obj `if test -f 'barrier_init.c'; then $(CYGPATH_W) 'barrier_init.c'; else $(CYGPATH_W) '$(srcdir)/barrier_init.c'; fi`

libdevrt_a-chunk_dynamic.o: chunk_dynamic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_dynamic.o -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_dynamic.Tpo -c -o libdevrt_a-chunk_dynamic.o `test -f 'chunk_dynamic.c' || echo '$(srcdir)/'`chunk_dynamic.c
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_dynamic.Tpo $(DEPDIR)/libdevrt_a-chunk_dynamic.Po
#	source='chunk_dynamic.c' object='libdevrt_a-chunk_dynamic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_dynamic.o `test -f 'chunk_dynamic.c' || echo '$(srcdir)/'`chunk_dynamic.c

libdevrt_a-chunk_dynamic.obj: chunk_dynamic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_dynamic.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_dynamic.Tpo -c -o libdevrt_a-chunk_dynamic.obj `if test -f 'chunk_dynamic.c'; then $(CYGPATH_W) 'chunk_dynamic.c'; else $(CYGPATH_W) '$(srcdir)/chunk_dynamic.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_dynamic.Tpo $(DEPDIR)/libdevrt_a-chunk_dynamic.Po
#	source='chunk_dynamic.c' object='libdevrt_a-chunk_dynamic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_dynamic.obj `if test -f 'chunk_dynamic.c'; then $(CYGPATH_W) 'chunk_dynamic.c'; else $(CYGPATH_W) '$(srcdir)/chunk_dynamic.c'; fi`

libdevrt_a-chunk_guided.o: chunk_guided.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_guided.o -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_guided.Tpo -c -o libdevrt_a-chunk_guided.o `test -f 'chunk_guided.c' || echo '$(srcdir)/'`chunk_guided.c
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_guided.Tpo $(DEPDIR)/libdevrt_a-chunk_guided.Po
#	source='chunk_guided.c' object='libdevrt_a-chunk_guided.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_guided.o `test -f 'chunk_guided.c' || echo '$(srcdir)/'`chunk_guided.c

libdevrt_a-chunk_guided.obj: chunk_guided.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_guided.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_guided.Tpo -c -o libdevrt_a-chunk_guided.obj `if test -f 'chunk_guided.c'; then $(CYGPATH_W) 'chunk_guided.c'; else $(CYGPATH_W) '$(srcdir)/chunk_guided.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_guided.Tpo $(DEPDIR)/libdevrt_a-chunk_guided.Po
#	source='chunk_guided.c' object='libdevrt_a-chunk_guided.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_guided.obj `if test -f 'chunk_guided.c'; then $(CYGPATH_W) 'chunk_guided.c'; else $(CYGPATH_W) '$(srcdir)/chunk_guided.c'; fi`

libdevrt_a-chunk_static.o: chunk_static.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_static.o -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_static.Tpo -c -o libdevrt_a-chunk_static.o `test -f 'chunk_static.c' || echo '$(srcdir)/'`chunk_static.c
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_static.Tpo $(DEPDIR)/libdevrt_a-chunk_static.Po
#	source='chunk_static.c' object='libdevrt_a-chunk_static.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_static.o `test -f 'chunk_static.c' || echo '$(srcdir)/'`chunk_static.c

libdevrt_a-chunk_static.obj: chunk_static.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-chunk_static.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-chunk_static.Tpo -c -o libdevrt_a-chunk_static.obj `if test -f 'chunk_static.c'; then $(CYGPATH_W) 'chunk_static.c'; else $(CYGPATH_W) '$(srcdir)/chunk_static.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-chunk_static.Tpo $(DEPDIR)/libdevrt_a-chunk_static.Po
#	source='chunk_static.c' object='libdevrt_a-chunk_static.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-chunk_static.obj `if test -f 'chunk_static.c'; then $(CYGPATH_W) 'chunk_static.c'; else $(CYGPATH_W) '$(srcdir)/chunk_static.c'; fi`

libdevrt_a-com.o: com.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-com.o -MD -MP -MF $(DEPDIR)/libdevrt_a-com.Tpo -c -o libdevrt_a-com.o `test -f 'com.c' || echo '$(srcdir)/'`com.c
	$(am__mv) $(DEPDIR)/libdevrt_a-com.Tpo $(DEPDIR)/libdevrt_a-com.Po
#	source='com.c' object='libdevrt_a-com.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-com.o `test -f 'com.c' || echo '$(srcdir)/'`com.c

libdevrt_a-com.obj: com.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-com.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-com.Tpo -c -o libdevrt_a-com.obj `if test -f 'com.c'; then $(CYGPATH_W) 'com.c'; else $(CYGPATH_W) '$(srcdir)/com.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-com.Tpo $(DEPDIR)/libdevrt_a-com.Po
#	source='com.c' object='libdevrt_a-com.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-com.obj `if test -f 'com.c'; then $(CYGPATH_W) 'com.c'; else $(CYGPATH_W) '$(srcdir)/com.c'; fi`

libdevrt_a-critical.o: critical.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-critical.o -MD -MP -MF $(DEPDIR)/libdevrt_a-critical.Tpo -c -o libdevrt_a-critical.o `test -f 'critical.c' || echo '$(srcdir)/'`critical.c
	$(am__mv) $(DEPDIR)/libdevrt_a-critical.Tpo $(DEPDIR)/libdevrt_a-critical.Po
#	source='critical.c' object='libdevrt_a-critical.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-critical.o `test -f 'critical.c' || echo '$(srcdir)/'`critical.c

libdevrt_a-critical.obj: critical.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-critical.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-critical.Tpo -c -o libdevrt_a-critical.obj `if test -f 'critical.c'; then $(CYGPATH_W) 'critical.c'; else $(CYGPATH_W) '$(srcdir)/critical.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-critical.Tpo $(DEPDIR)/libdevrt_a-critical.Po
#	source='critical.c' object='libdevrt_a-critical.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-critical.obj `if test -f 'critical.c'; then $(CYGPATH_W) 'critical.c'; else $(CYGPATH_W) '$(srcdir)/critical.c'; fi`

libdevrt_a-device.o: device.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-device.o -MD -MP -MF $(DEPDIR)/libdevrt_a-device.Tpo -c -o libdevrt_a-device.o `test -f 'device.c' || echo '$(srcdir)/'`device.c
	$(am__mv) $(DEPDIR)/libdevrt_a-device.Tpo $(DEPDIR)/libdevrt_a-device.Po
#	source='device.c' object='libdevrt_a-device.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-device.o `test -f 'device.c' || echo '$(srcdir)/'`device.c

libdevrt_a-device.obj: device.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-device.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-device.Tpo -c -o libdevrt_a-device.obj `if test -f 'device.c'; then $(CYGPATH_W) 'device.c'; else $(CYGPATH_W) '$(srcdir)/device.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-device.Tpo $(DEPDIR)/libdevrt_a-device.Po
#	source='device.c' object='libdevrt_a-device.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-device.obj `if test -f 'device.c'; then $(CYGPATH_W) 'device.c'; else $(CYGPATH_W) '$(srcdir)/device.c'; fi`

libdevrt_a-epiphany.o: epiphany.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-epiphany.o -MD -MP -MF $(DEPDIR)/libdevrt_a-epiphany.Tpo -c -o libdevrt_a-epiphany.o `test -f 'epiphany.c' || echo '$(srcdir)/'`epiphany.c
	$(am__mv) $(DEPDIR)/libdevrt_a-epiphany.Tpo $(DEPDIR)/libdevrt_a-epiphany.Po
#	source='epiphany.c' object='libdevrt_a-epiphany.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-epiphany.o `test -f 'epiphany.c' || echo '$(srcdir)/'`epiphany.c

libdevrt_a-epiphany.obj: epiphany.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-epiphany.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-epiphany.Tpo -c -o libdevrt_a-epiphany.obj `if test -f 'epiphany.c'; then $(CYGPATH_W) 'epiphany.c'; else $(CYGPATH_W) '$(srcdir)/epiphany.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-epiphany.Tpo $(DEPDIR)/libdevrt_a-epiphany.Po
#	source='epiphany.c' object='libdevrt_a-epiphany.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-epiphany.obj `if test -f 'epiphany.c'; then $(CYGPATH_W) 'epiphany.c'; else $(CYGPATH_W) '$(srcdir)/epiphany.c'; fi`

libdevrt_a-executetasks.o: executetasks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-executetasks.o -MD -MP -MF $(DEPDIR)/libdevrt_a-executetasks.Tpo -c -o libdevrt_a-executetasks.o `test -f 'executetasks.c' || echo '$(srcdir)/'`executetasks.c
	$(am__mv) $(DEPDIR)/libdevrt_a-executetasks.Tpo $(DEPDIR)/libdevrt_a-executetasks.Po
#	source='executetasks.c' object='libdevrt_a-executetasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-executetasks.o `test -f 'executetasks.c' || echo '$(srcdir)/'`executetasks.c

libdevrt_a-executetasks.obj: executetasks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-executetasks.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-executetasks.Tpo -c -o libdevrt_a-executetasks.obj `if test -f 'executetasks.c'; then $(CYGPATH_W) 'executetasks.c'; else $(CYGPATH_W) '$(srcdir)/executetasks.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-executetasks.Tpo $(DEPDIR)/libdevrt_a-executetasks.Po
#	source='executetasks.c' object='libdevrt_a-executetasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-executetasks.obj `if test -f 'executetasks.c'; then $(CYGPATH_W) 'executetasks.c'; else $(CYGPATH_W) '$(srcdir)/executetasks.c'; fi`

libdevrt_a-for.o: for.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-for.o -MD -MP -MF $(DEPDIR)/libdevrt_a-for.Tpo -c -o libdevrt_a-for.o `test -f 'for.c' || echo '$(srcdir)/'`for.c
	$(am__mv) $(DEPDIR)/libdevrt_a-for.Tpo $(DEPDIR)/libdevrt_a-for.Po
#	source='for.c' object='libdevrt_a-for.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-for.o `test -f 'for.c' || echo '$(srcdir)/'`for.c

libdevrt_a-for.obj: for.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-for.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-for.Tpo -c -o libdevrt_a-for.obj `if test -f 'for.c'; then $(CYGPATH_W) 'for.c'; else $(CYGPATH_W) '$(srcdir)/for.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-for.Tpo $(DEPDIR)/libdevrt_a-for.Po
#	source='for.c' object='libdevrt_a-for.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-for.obj `if test -f 'for.c'; then $(CYGPATH_W) 'for.c'; else $(CYGPATH_W) '$(srcdir)/for.c'; fi`

libdevrt_a-icvs_omp.o: icvs_omp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-icvs_omp.o -MD -MP -MF $(DEPDIR)/libdevrt_a-icvs_omp.Tpo -c -o libdevrt_a-icvs_omp.o `test -f 'icvs_omp.c' || echo '$(srcdir)/'`icvs_omp.c
	$(am__mv) $(DEPDIR)/libdevrt_a-icvs_omp.Tpo $(DEPDIR)/libdevrt_a-icvs_omp.Po
#	source='icvs_omp.c' object='libdevrt_a-icvs_omp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-icvs_omp.o `test -f 'icvs_omp.c' || echo '$(srcdir)/'`icvs_omp.c

libdevrt_a-icvs_omp.obj: icvs_omp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-icvs_omp.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-icvs_omp.Tpo -c -o libdevrt_a-icvs_omp.obj `if test -f 'icvs_omp.c'; then $(CYGPATH_W) 'icvs_omp.c'; else $(CYGPATH_W) '$(srcdir)/icvs_omp.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-icvs_omp.Tpo $(DEPDIR)/libdevrt_a-icvs_omp.Po
#	source='icvs_omp.c' object='libdevrt_a-icvs_omp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-icvs_omp.obj `if test -f 'icvs_omp.c'; then $(CYGPATH_W) 'icvs_omp.c'; else $(CYGPATH_W) '$(srcdir)/icvs_omp.c'; fi`

libdevrt_a-init_ws.o: init_ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-init_ws.o -MD -MP -MF $(DEPDIR)/libdevrt_a-init_ws.Tpo -c -o libdevrt_a-init_ws.o `test -f 'init_ws.c' || echo '$(srcdir)/'`init_ws.c
	$(am__mv) $(DEPDIR)/libdevrt_a-init_ws.Tpo $(DEPDIR)/libdevrt_a-init_ws.Po
#	source='init_ws.c' object='libdevrt_a-init_ws.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-init_ws.o `test -f 'init_ws.c' || echo '$(srcdir)/'`init_ws.c

libdevrt_a-init_ws.obj: init_ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-init_ws.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-init_ws.Tpo -c -o libdevrt_a-init_ws.obj `if test -f 'init_ws.c'; then $(CYGPATH_W) 'init_ws.c'; else $(CYGPATH_W) '$(srcdir)/init_ws.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-init_ws.Tpo $(DEPDIR)/libdevrt_a-init_ws.Po
#	source='init_ws.c' object='libdevrt_a-init_ws.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-init_ws.obj `if test -f 'init_ws.c'; then $(CYGPATH_W) 'init_ws.c'; else $(CYGPATH_W) '$(srcdir)/init_ws.c'; fi`

libdevrt_a-locks.o: locks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-locks.o -MD -MP -MF $(DEPDIR)/libdevrt_a-locks.Tpo -c -o libdevrt_a-locks.o `test -f 'locks.c' || echo '$(srcdir)/'`locks.c
	$(am__mv) $(DEPDIR)/libdevrt_a-locks.Tpo $(DEPDIR)/libdevrt_a-locks.Po
#	source='locks.c' object='libdevrt_a-locks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-locks.o `test -f 'locks.c' || echo '$(srcdir)/'`locks.c

libdevrt_a-locks.obj: locks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-locks.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-locks.Tpo -c -o libdevrt_a-locks.obj `if test -f 'locks.c'; then $(CYGPATH_W) 'locks.c'; else $(CYGPATH_W) '$(srcdir)/locks.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-locks.Tpo $(DEPDIR)/libdevrt_a-locks.Po
#	source='locks.c' object='libdevrt_a-locks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-locks.obj `if test -f 'locks.c'; then $(CYGPATH_W) 'locks.c'; else $(CYGPATH_W) '$(srcdir)/locks.c'; fi`

libdevrt_a-newtask.o: newtask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-newtask.o -MD -MP -MF $(DEPDIR)/libdevrt_a-newtask.Tpo -c -o libdevrt_a-newtask.o `test -f 'newtask.c' || echo '$(srcdir)/'`newtask.c
	$(am__mv) $(DEPDIR)/libdevrt_a-newtask.Tpo $(DEPDIR)/libdevrt_a-newtask.Po
#	source='newtask.c' object='libdevrt_a-newtask.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-newtask.o `test -f 'newtask.c' || echo '$(srcdir)/'`newtask.c

libdevrt_a-newtask.obj: newtask.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-newtask.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-newtask.Tpo -c -o libdevrt_a-newtask.obj `if test -f 'newtask.c'; then $(CYGPATH_W) 'newtask.c'; else $(CYGPATH_W) '$(srcdir)/newtask.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-newtask.Tpo $(DEPDIR)/libdevrt_a-newtask.Po
#	source='newtask.c' object='libdevrt_a-newtask.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-newtask.obj `if test -f 'newtask.c'; then $(CYGPATH_W) 'newtask.c'; else $(CYGPATH_W) '$(srcdir)/newtask.c'; fi`

libdevrt_a-omp.o: omp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-omp.o -MD -MP -MF $(DEPDIR)/libdevrt_a-omp.Tpo -c -o libdevrt_a-omp.o `test -f 'omp.c' || echo '$(srcdir)/'`omp.c
	$(am__mv) $(DEPDIR)/libdevrt_a-omp.Tpo $(DEPDIR)/libdevrt_a-omp.Po
#	source='omp.c' object='libdevrt_a-omp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-omp.o `test -f 'omp.c' || echo '$(srcdir)/'`omp.c

libdevrt_a-omp.obj: omp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-omp.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-omp.Tpo -c -o libdevrt_a-omp.obj `if test -f 'omp.c'; then $(CYGPATH_W) 'omp.c'; else $(CYGPATH_W) '$(srcdir)/omp.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-omp.Tpo $(DEPDIR)/libdevrt_a-omp.Po
#	source='omp.c' object='libdevrt_a-omp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-omp.obj `if test -f 'omp.c'; then $(CYGPATH_W) 'omp.c'; else $(CYGPATH_W) '$(srcdir)/omp.c'; fi`

libdevrt_a-othr.o: othr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-othr.o -MD -MP -MF $(DEPDIR)/libdevrt_a-othr.Tpo -c -o libdevrt_a-othr.o `test -f 'othr.c' || echo '$(srcdir)/'`othr.c
	$(am__mv) $(DEPDIR)/libdevrt_a-othr.Tpo $(DEPDIR)/libdevrt_a-othr.Po
#	source='othr.c' object='libdevrt_a-othr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-othr.o `test -f 'othr.c' || echo '$(srcdir)/'`othr.c

libdevrt_a-othr.obj: othr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-othr.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-othr.Tpo -c -o libdevrt_a-othr.obj `if test -f 'othr.c'; then $(CYGPATH_W) 'othr.c'; else $(CYGPATH_W) '$(srcdir)/othr.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-othr.Tpo $(DEPDIR)/libdevrt_a-othr.Po
#	source='othr.c' object='libdevrt_a-othr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-othr.obj `if test -f 'othr.c'; then $(CYGPATH_W) 'othr.c'; else $(CYGPATH_W) '$(srcdir)/othr.c'; fi`

libdevrt_a-ordered.o: ordered.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-ordered.o -MD -MP -MF $(DEPDIR)/libdevrt_a-ordered.Tpo -c -o libdevrt_a-ordered.o `test -f 'ordered.c' || echo '$(srcdir)/'`ordered.c
	$(am__mv) $(DEPDIR)/libdevrt_a-ordered.Tpo $(DEPDIR)/libdevrt_a-ordered.Po
#	source='ordered.c' object='libdevrt_a-ordered.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-ordered.o `test -f 'ordered.c' || echo '$(srcdir)/'`ordered.c

libdevrt_a-ordered.obj: ordered.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-ordered.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-ordered.Tpo -c -o libdevrt_a-ordered.obj `if test -f 'ordered.c'; then $(CYGPATH_W) 'ordered.c'; else $(CYGPATH_W) '$(srcdir)/ordered.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-ordered.Tpo $(DEPDIR)/libdevrt_a-ordered.Po
#	source='ordered.c' object='libdevrt_a-ordered.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-ordered.obj `if test -f 'ordered.c'; then $(CYGPATH_W) 'ordered.c'; else $(CYGPATH_W) '$(srcdir)/ordered.c'; fi`

libdevrt_a-parallel.o: parallel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-parallel.o -MD -MP -MF $(DEPDIR)/libdevrt_a-parallel.Tpo -c -o libdevrt_a-parallel.o `test -f 'parallel.c' || echo '$(srcdir)/'`parallel.c
	$(am__mv) $(DEPDIR)/libdevrt_a-parallel.Tpo $(DEPDIR)/libdevrt_a-parallel.Po
#	source='parallel.c' object='libdevrt_a-parallel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-parallel.o `test -f 'parallel.c' || echo '$(srcdir)/'`parallel.c

libdevrt_a-parallel.obj: parallel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-parallel.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-parallel.Tpo -c -o libdevrt_a-parallel.obj `if test -f 'parallel.c'; then $(CYGPATH_W) 'parallel.c'; else $(CYGPATH_W) '$(srcdir)/parallel.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-parallel.Tpo $(DEPDIR)/libdevrt_a-parallel.Po
#	source='parallel.c' object='libdevrt_a-parallel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-parallel.obj `if test -f 'parallel.c'; then $(CYGPATH_W) 'parallel.c'; else $(CYGPATH_W) '$(srcdir)/parallel.c'; fi`

libdevrt_a-reduction.o: reduction.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-reduction.o -MD -MP -MF $(DEPDIR)/libdevrt_a-reduction.Tpo -c -o libdevrt_a-reduction.o `test -f 'reduction.c' || echo '$(srcdir)/'`reduction.c
	$(am__mv) $(DEPDIR)/libdevrt_a-reduction.Tpo $(DEPDIR)/libdevrt_a-reduction.Po
#	source='reduction.c' object='libdevrt_a-reduction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-reduction.o `test -f 'reduction.c' || echo '$(srcdir)/'`reduction.c

libdevrt_a-reduction.obj: reduction.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-reduction.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-reduction.Tpo -c -o libdevrt_a-reduction.obj `if test -f 'reduction.c'; then $(CYGPATH_W) 'reduction.c'; else $(CYGPATH_W) '$(srcdir)/reduction.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-reduction.Tpo $(DEPDIR)/libdevrt_a-reduction.Po
#	source='reduction.c' object='libdevrt_a-reduction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-reduction.obj `if test -f 'reduction.c'; then $(CYGPATH_W) 'reduction.c'; else $(CYGPATH_W) '$(srcdir)/reduction.c'; fi`

libdevrt_a-sections.o: sections.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-sections.o -MD -MP -MF $(DEPDIR)/libdevrt_a-sections.Tpo -c -o libdevrt_a-sections.o `test -f 'sections.c' || echo '$(srcdir)/'`sections.c
	$(am__mv) $(DEPDIR)/libdevrt_a-sections.Tpo $(DEPDIR)/libdevrt_a-sections.Po
#	source='sections.c' object='libdevrt_a-sections.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-sections.o `test -f 'sections.c' || echo '$(srcdir)/'`sections.c

libdevrt_a-sections.obj: sections.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-sections.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-sections.Tpo -c -o libdevrt_a-sections.obj `if test -f 'sections.c'; then $(CYGPATH_W) 'sections.c'; else $(CYGPATH_W) '$(srcdir)/sections.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-sections.Tpo $(DEPDIR)/libdevrt_a-sections.Po
#	source='sections.c' object='libdevrt_a-sections.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-sections.obj `if test -f 'sections.c'; then $(CYGPATH_W) 'sections.c'; else $(CYGPATH_W) '$(srcdir)/sections.c'; fi`

libdevrt_a-single.o: single.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-single.o -MD -MP -MF $(DEPDIR)/libdevrt_a-single.Tpo -c -o libdevrt_a-single.o `test -f 'single.c' || echo '$(srcdir)/'`single.c
	$(am__mv) $(DEPDIR)/libdevrt_a-single.Tpo $(DEPDIR)/libdevrt_a-single.Po
#	source='single.c' object='libdevrt_a-single.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-single.o `test -f 'single.c' || echo '$(srcdir)/'`single.c

libdevrt_a-single.obj: single.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-single.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-single.Tpo -c -o libdevrt_a-single.obj `if test -f 'single.c'; then $(CYGPATH_W) 'single.c'; else $(CYGPATH_W) '$(srcdir)/single.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-single.Tpo $(DEPDIR)/libdevrt_a-single.Po
#	source='single.c' object='libdevrt_a-single.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-single.obj `if test -f 'single.c'; then $(CYGPATH_W) 'single.c'; else $(CYGPATH_W) '$(srcdir)/single.c'; fi`

libdevrt_a-tasks.o: tasks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-tasks.o -MD -MP -MF $(DEPDIR)/libdevrt_a-tasks.Tpo -c -o libdevrt_a-tasks.o `test -f 'tasks.c' || echo '$(srcdir)/'`tasks.c
	$(am__mv) $(DEPDIR)/libdevrt_a-tasks.Tpo $(DEPDIR)/libdevrt_a-tasks.Po
#	source='tasks.c' object='libdevrt_a-tasks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-tasks.o `test -f 'tasks.c' || echo '$(srcdir)/'`tasks.c

libdevrt_a-tasks.obj: tasks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-tasks.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-tasks.Tpo -c -o libdevrt_a-tasks.obj `if test -f 'tasks.c'; then $(CYGPATH_W) 'tasks.c'; else $(CYGPATH_W) '$(srcdir)/tasks.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-tasks.Tpo $(DEPDIR)/libdevrt_a-tasks.Po
#	source='tasks.c' object='libdevrt_a-tasks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-tasks.obj `if test -f 'tasks.c'; then $(CYGPATH_W) 'tasks.c'; else $(CYGPATH_W) '$(srcdir)/tasks.c'; fi`

libdevrt_a-taskwait.o: taskwait.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-taskwait.o -MD -MP -MF $(DEPDIR)/libdevrt_a-taskwait.Tpo -c -o libdevrt_a-taskwait.o `test -f 'taskwait.c' || echo '$(srcdir)/'`taskwait.c
	$(am__mv) $(DEPDIR)/libdevrt_a-taskwait.Tpo $(DEPDIR)/libdevrt_a-taskwait.Po
#	source='taskwait.c' object='libdevrt_a-taskwait.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-taskwait.o `test -f 'taskwait.c' || echo '$(srcdir)/'`taskwait.c

libdevrt_a-taskwait.obj: taskwait.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-taskwait.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-taskwait.Tpo -c -o libdevrt_a-taskwait.obj `if test -f 'taskwait.c'; then $(CYGPATH_W) 'taskwait.c'; else $(CYGPATH_W) '$(srcdir)/taskwait.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-taskwait.Tpo $(DEPDIR)/libdevrt_a-taskwait.Po
#	source='taskwait.c' object='libdevrt_a-taskwait.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-taskwait.obj `if test -f 'taskwait.c'; then $(CYGPATH_W) 'taskwait.c'; else $(CYGPATH_W) '$(srcdir)/taskwait.c'; fi`

libdevrt_a-ws.o: ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-ws.o -MD -MP -MF $(DEPDIR)/libdevrt_a-ws.Tpo -c -o libdevrt_a-ws.o `test -f 'ws.c' || echo '$(srcdir)/'`ws.c
	$(am__mv) $(DEPDIR)/libdevrt_a-ws.Tpo $(DEPDIR)/libdevrt_a-ws.Po
#	source='ws.c' object='libdevrt_a-ws.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-ws.o `test -f 'ws.c' || echo '$(srcdir)/'`ws.c

libdevrt_a-ws.obj: ws.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -MT libdevrt_a-ws.obj -MD -MP -MF $(DEPDIR)/libdevrt_a-ws.Tpo -c -o libdevrt_a-ws.obj `if test -f 'ws.c'; then $(CYGPATH_W) 'ws.c'; else $(CYGPATH_W) '$(srcdir)/ws.c'; fi`
	$(am__mv) $(DEPDIR)/libdevrt_a-ws.Tpo $(DEPDIR)/libdevrt_a-ws.Po
#	source='ws.c' object='libdevrt_a-ws.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdevrt_a_CFLAGS) $(CFLAGS) -c -o libdevrt_a-ws.obj `if test -f 'ws.c'; then $(CYGPATH_W) 'ws.c'; else $(CYGPATH_W) '$(srcdir)/ws.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-moduleDATA: $(module_DATA)
	@$(NORMAL_INSTALL)
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(moduledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(moduledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(moduledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(moduledir)" || exit $$?; \
	done

uninstall-moduleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(moduledir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(moduledir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-moduleLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-moduleDATA install-moduleLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-moduleDATA uninstall-moduleLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-moduleLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-moduleDATA install-moduleLIBRARIES install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-moduleDATA \
	uninstall-moduleLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
